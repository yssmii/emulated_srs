<launch>
  <arg name="sensor_name"
       default="D435"
       doc="D435|D455|L515|Structure|Kinect|Kinect2|Astra"
       />

  <arg name="fps" default="1" />

  <arg name="zkey" default="1500.0" />
  <arg name="min_gap_of_occluding_boundary" default="50.0" />
  <arg name="min_pixels_as_object" default="500" />
  
  <arg name="use_mask_p" default="0" />
  
  <arg name="filename_mask" default="MASK.png" />

  <arg name="filename_region" default="Reg.png" />
  <arg name="path_to_save" default="./" />
  
  <group ns="sensing_unit">
    <group if="$(eval sensor_name=='D435' or 
                       sensor_name=='D455' or
                       sensor_name=='L515')" >
  <!--
      <include file="$(find realsense2_camera)/launch/rs_rgbd.launch"/>
  -->
      <include file="$(find realsense2_camera)/launch/rs_rgbd.launch">
          <arg name="align_depth" value="true" />
          <arg name="depth_width" value="1280" />
          <arg name="depth_height" value="720" />
          <arg name="depth_fps" value="15" />
          <arg name="color_width" value="1280" />
          <arg name="color_height" value="720" />
          <arg name="color_fps" value="15" />
      </include>
    </group>
    
    <group if="$(eval sensor_name=='Structure')">
      <remap from="/sensing_unit/camera/depth/points"
             to="/sensing_unit/camera/depth_registered/points" />
      <include file="$(find openni2_launch)/launch/openni2.launch" />
    </group>
    
    <group if="$(eval sensor_name=='Astra')">
      <include file="$(find astra_camera)/launch/astra.launch" />
    </group>

    <group if="$(eval sensor_name=='Kinect')">
      <include file="$(find freenect_launch)/launch/freenect.launch" />
    </group>

    <group if="$(eval sensor_name=='Kinect2')">
      <include file="$(find kinect2_bridge)/launch/kinect2_bridge.launch" />
    </group>

    <group if="$(eval sensor_name=='ZED')">
      <include file="$(find zed_wrapper)/launch/zed.launch" />
    </group>
  </group>
  
  <group ns="processing_unit">
 
    <node name="throttle" pkg="topic_tools" type="throttle"
          args="messages /sensing_unit/camera/depth_registered/points
                $(arg fps)
                /processing_unit/throttle/points" />
    
    <node name="region_maker" pkg="emulated_srs" type="region_maker"
	  output="screen" cwd="node">
      <remap from="/camera/depth_registered/points"
             to="/processing_unit/throttle/points" />
      
      <param name="sensor_name" value="$(arg sensor_name)" />

      <param name="use_mask_p" value="$(arg use_mask_p)" />
      
      <param name="zkey" value="$(arg zkey)" />
      <param name="min_gap_of_occluding_boundary"
	     value="$(arg min_gap_of_occluding_boundary)" />
      <param name="min_pixels_as_object" value="$(arg min_pixels_as_object)" />

      <param name="filename_mask" value="$(arg filename_mask)" />

      <param name="filename_region" value="$(arg filename_region)" />
      <param name="path_to_save" value="$(arg path_to_save)" />
      
      <param name="display_images_p" value="1" />
    </node>

  </group>

</launch>

 
